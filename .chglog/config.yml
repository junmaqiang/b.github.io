# .chglog/config.yml
style: github # 日志风格（github, gitlab, plain等）
template: CHANGELOG.tpl.md # 模板文件路径
info: # 项目信息
  title: CHANGELOG # 日志标题
  repository_url: https://github.com/junmaqiang/b.github.io.git
options: # 生成选项
  commits:
    filters: # 提交过滤规则
      Type: # 仅包含这些类型的提交
        # 下面是 代码类
        - feat
        - fix
        - perf
        - style
        # 下面是 非代码类
        - test
        - ci
        - docs
        # 下面是 其他变更类
        - chore
        # 下面是 优化代码类
        - refactor
    sort_by: Scope
    # 确保每个commit单独一行
    format: "- {{ .Subject }}\n" # 强制换行
  commit_groups: # 提交分组
    title_maps: # 定义分组标题
      feat: "🎉Features"
      fix: "🐞Bugfixes"
      perf: "🚀Improvements"
      chore: "What's Changed"
      # feat: 新增功能
      # fix: 修复缺陷
      # perf: 改进性能
      # style: 格式化代码
      # test: 测试相关
      # ci: 部署相关
      # docs: 文档相关
      # refactor: 优化代码
      # chore: 其他变更
    group_by: "Type" # 添加分组间空行控制
    line_format: "{{ .Title }}\n" # 强制换行
  header: # 日志头信息
    # 使用正则解析提交消息：能从 feat(core): add new feature 中解析出 Type、Scope 和 Subject
    #        pattern: "^(\w*)(?:\((.*)\))?:\s+(.*)$" # deepseek写法
    pattern: "^(\\w*)(?:\\(([\\w\\$\\.\\-\\*\\s]*)\\))?\\:\\s(.*)$" # 官方写法
    pattern_maps:
      - Type
      - Scope
      - Subject
  issues: # Issue 链接处理
    prefix:
      - "#"
  refs: # 提交引用（如关闭的 Issue）
    actions:
      - Closes
      - Fixes
  notes:
    keywords: # 指定哪些关键词标记重要说明
      - BREAKING CHANGE
